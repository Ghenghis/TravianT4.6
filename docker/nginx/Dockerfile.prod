# ==========================================
# Multi-Stage Build for Production Nginx
# ==========================================
# Stage 1: Build PHP-FPM with application code
# Stage 2: Build Nginx with static assets
# ==========================================

# Stage 1: PHP-FPM with full application code
FROM php:8.2-fpm as php-base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    libwebp-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    libpq-dev \
    libicu-dev \
    && rm -rf /var/lib/apt/lists/*

# Configure GD
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp

# Install PHP extensions
RUN docker-php-ext-install \
    pdo_mysql \
    pdo_pgsql \
    gd \
    mbstring \
    xml \
    zip \
    opcache \
    intl \
    bcmath \
    pcntl \
    sockets

# Install Redis
RUN pecl install redis && docker-php-ext-enable redis

# Copy application code
WORKDIR /var/www/html
COPY --chown=www-data:www-data . /var/www/html

# Install Composer dependencies
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Stage 2: Nginx with static assets only
FROM nginx:alpine

# Install gettext for envsubst
RUN apk add --no-cache gettext

# Create non-root user (nginx user already exists in nginx:alpine, update UID)
RUN deluser nginx && \
    addgroup -g 1001 nginx && \
    adduser -D -u 1001 -G nginx nginx

# Copy entrypoint for config templating
COPY --chmod=755 docker/nginx/docker-entrypoint.sh /docker-entrypoint.d/10-template-configs.sh

# Copy static assets from php-base stage
COPY --from=php-base --chown=nginx:nginx /var/www/html /var/www/html

# Copy nginx configuration (including .template files)
COPY --chown=nginx:nginx docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY --chown=nginx:nginx docker/nginx/conf.d /etc/nginx/conf.d

# Create necessary directories with proper permissions
RUN mkdir -p /var/cache/nginx /var/run /tmp && \
    chown -R nginx:nginx /var/cache/nginx /var/run /tmp && \
    chmod -R 755 /var/www/html

# Link access and error logs to stdout/stderr (no volume needed)
RUN ln -sf /dev/stdout /var/log/nginx/access.log && \
    ln -sf /dev/stderr /var/log/nginx/error.log

# Switch to non-root user
USER nginx

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]
