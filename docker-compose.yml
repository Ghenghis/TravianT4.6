version: '3.8'

services:
  # ==========================================
  # Web Server (Nginx)
  # ==========================================
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile.prod
    container_name: travian_nginx
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - ./certs/dev:/etc/nginx/certs/dev:ro
      - certbot_conf:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    depends_on:
      - php-fpm
    networks:
      - edge_public
      - app_core
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETUID
      - SETGID
    tmpfs:
      - /tmp
      - /var/run
      - /var/cache/nginx
    security_opt:
      - no-new-privileges:true
    mem_limit: 512M
    cpus: 0.5
    mem_reservation: 256M
    healthcheck:
      test: ["CMD", "bash", "/var/www/html/scripts/healthcheck/nginx-healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ==========================================
  # PHP-FPM Application
  # ==========================================
  php-fpm:
    build:
      context: .
      dockerfile: docker/php-app/Dockerfile
    container_name: travian_app
    volumes:
      - ./:/var/www/html
      - php_logs:/var/log/php
      - php_fpm_logs:/var/log/php-fpm
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_core
      - data_services
      - llm_gpu
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
    mem_limit: 1536M
    cpus: 1.0
    mem_reservation: 1024M
    healthcheck:
      test: ["CMD", "php", "/var/www/html/scripts/healthcheck/php-fpm-healthcheck.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ==========================================
  # PostgreSQL (Global DB + AI-NPC)
  # ==========================================
  postgres:
    image: postgres:14
    container_name: travian_postgres
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schemas/complete-automation-ai-system.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - data_services
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    mem_limit: 4096M
    cpus: 2.0
    mem_reservation: 2048M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # MySQL (Game World Databases)
  # ==========================================
  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    container_name: travian_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    networks:
      - data_services
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    mem_limit: 4096M
    cpus: 2.0
    mem_reservation: 2048M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # Redis (Caching & Sessions)
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: travian_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - data_services
    restart: unless-stopped
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    mem_limit: 1024M
    cpus: 0.5
    mem_reservation: 512M
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $$REDIS_PASSWORD PING | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # Redis Commander (Optional Web UI)
  # ==========================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: travian_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - edge_public
      - data_services
    restart: unless-stopped
    profiles:
      - monitoring

  # ==========================================
  # Ollama (LLM Backend - CPU/GPU)
  # ==========================================
  ollama:
    image: ollama/ollama:latest
    container_name: travian_ollama
    volumes:
      - ollama_models:/root/.ollama
      - ./:/var/www/html
    networks:
      - llm_gpu
    restart: unless-stopped
    profiles:
      - llm-ollama
    mem_limit: 16384M
    cpus: 4.0
    mem_reservation: 8192M
    healthcheck:
      test: ["CMD", "bash", "/var/www/html/scripts/healthcheck/ollama-healthcheck.sh"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    # GPU support (requires NVIDIA Container Toolkit on host)
    # Uncomment for GPU acceleration
    # deploy:
    #   resources:
    #     devices:
    #       - driver: nvidia
    #         count: 1
    #         capabilities: [gpu]

  # ==========================================
  # vLLM (LLM Backend - GPU Only)
  # ==========================================
  vllm:
    image: vllm/vllm-openai:latest
    container_name: travian_vllm
    command: --model ${VLLM_MODEL:-meta-llama/Llama-2-7b-chat-hf} --gpu-memory-utilization 0.9
    volumes:
      - vllm_models:/root/.cache/huggingface
      - ./:/var/www/html
    networks:
      - llm_gpu
    restart: unless-stopped
    profiles:
      - llm-vllm
    mem_limit: 16384M
    cpus: 4.0
    mem_reservation: 8192M
    healthcheck:
      test: ["CMD", "bash", "/var/www/html/scripts/healthcheck/vllm-healthcheck.sh"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s
    # GPU support (requires NVIDIA Container Toolkit on host)
    # Uncomment for GPU acceleration
    # deploy:
    #   resources:
    #     devices:
    #       - driver: nvidia
    #         count: 1
    #         capabilities: [gpu]

  # ==========================================
  # Certbot (Let's Encrypt TLS/SSL)
  # ==========================================
  certbot:
    build:
      context: .
      dockerfile: docker/certbot/Dockerfile
    container_name: travian_certbot
    profiles:
      - production
    environment:
      - DOMAIN=${DOMAIN:-travian.example.com}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-admin@example.com}
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - edge_public
    mem_limit: 256M
    cpus: 0.25
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true

  # ==========================================
  # WAF (Web Application Firewall)
  # ==========================================
  waf:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: travian_waf
    profiles:
      - production
    environment:
      - BACKEND=http://nginx:8080
      - PARANOIA=1
      - BLOCKING_PARANOIA=1
      - ANOMALY_INBOUND=5
      - ANOMALY_OUTBOUND=4
      - PROXY=1
      - MODSEC_RULE_ENGINE=On
      - ALLOWED_METHODS=GET HEAD POST OPTIONS PUT PATCH DELETE
      - ALLOWED_REQUEST_CONTENT_TYPE=application/json application/x-www-form-urlencoded multipart/form-data text/xml application/xml
      - CRS_ENABLE_TEST_MARKER=0
      - DOMAIN=${DOMAIN:-localhost}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot_conf:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    networks:
      - edge_public
    depends_on:
      - nginx
    restart: unless-stopped
    mem_limit: 512M
    cpus: 0.5
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    security_opt:
      - no-new-privileges:true

# ==========================================
# Networks
# ==========================================
networks:
  edge_public:
    driver: bridge
    name: travian_edge_public
  app_core:
    driver: bridge
    name: travian_app_core
  data_services:
    driver: bridge
    name: travian_data_services
    internal: true
  llm_gpu:
    driver: bridge
    name: travian_llm_gpu
    internal: true

# ==========================================
# Volumes
# ==========================================
volumes:
  nginx_conf:
  postgres_data:
  mysql_data:
  redis_data:
  ollama_models:
  vllm_models:
  php_logs:
  php_fpm_logs:
  mysql_logs:
  certbot_conf:
  certbot_www:
